<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iflytransporter.api.mapper.CarManageMapper" >
	<!--车主-首页-运单- 车辆总数,运单总数,待派单运单数 -->
	<select id="queryIndexTransporterWaybill" resultType="java.util.Map">
		select 
		ifnull(count(1),0) as waybillCount,
		ifnull(
			sum(
			if(status=0 and dispense_status=0,1,0)
		),0) as forDispenseCount
		from t_waybill a 
		where transporter_company_id=#{companyId,jdbcType=VARCHAR}
	</select>
	<!-- 车主-首页-保险,路税,车检提醒 -->
	<select id="queryIndexTransporterCarNotice" resultType="java.util.Map">
	select count(1) as carCount ,
		count(case when datediff(insurance_end_date,#{currentDate,jdbcType=DATE}) &gt; 7 then 0 end) insuranceSuccessCount,
		count(case when datediff(insurance_end_date,#{currentDate,jdbcType=DATE}) &lt; 7 then 0 end) insuranceFailureCount,
	    count(case when datediff(tax_end_date,#{currentDate,jdbcType=DATE}) &gt; 7 then 0 end) taxSuccessCount,
	    count(case when datediff(tax_end_date,#{currentDate,jdbcType=DATE}) &lt; 7 then 0 end) taxFailureCount,
	    count(case when datediff(check_end_date,#{currentDate,jdbcType=DATE}) &gt; 7 then 0 end) checkSuccessCount,
	    count(case when datediff(check_end_date,#{currentDate,jdbcType=DATE}) &lt; 7 then 0 end) checkFailureCount
	 from t_car
	where company_id =#{companyId,jdbcType=VARCHAR}
	</select>
	<!-- 车主-首页-每日一检 -->
	<select id="queryIndexTransporterDailyInspection" resultType="java.util.Map">
		select ifnull(b.count,0) as successCount,
		     ifnull(count(1) -b.count,count(1)) as failureCount
		from t_car a
		left join (
			select company_id,count(1) as count from t_car_daily_inspection where inspection_date = #{currentDate,jdbcType=DATE} group by company_id 
		)b on b.company_id = a.company_id
		where a.company_id = #{companyId,jdbcType=VARCHAR}
	</select>
	<!-- 车主-首页-行车休息 -->
	<select id="queryIndexTransporterCarDriveRest" resultType="java.util.Map">
		select ifnull(b.count,0) as restSuccessCount,
		     ifnull(count(1) -b.count,count(1)) as restFailureCount
		from t_car a
		left join (
			select company_id,count(1) as count ,car_id from t_car_drive_rest 
			where company_id  = #{companyId,jdbcType=VARCHAR} and type = 0
		)b on  a.id = b.car_id
		where a.company_id = #{companyId,jdbcType=VARCHAR}
	</select>
	
	<!-- 车主-司机提醒-列表 -行车数与需要休息数-->
	<select id="queryTransporterCarDriveRestListCount" resultType="java.util.Map">
		select count(1) as driveCount ,
		sum(
			if((countMinute &gt; 240),1,0)
		) as needRestCount
		from
		(
		   select company_id,car_id ,create_date,type,driver_id,TIMESTAMPDIFF(MINUTE,create_date,#{currentDate,jdbcType=TIMESTAMP}) as countMinute 
			from t_car_drive_rest a 
			where company_id = #{companyId,jdbcType=VARCHAR} and not exists
			(
			select 1 from t_car_drive_rest where company_id = a.company_id and car_id = a.car_id and a.create_date &lt; create_date
			)
		)t where t.type != 1
	</select>
	
	<!-- 车主-司机提醒-列表 -数据列表-->
	<select id="queryTransporterCarDriveRestList" resultType="java.util.Map">
		select t.car_id as carId,t.create_date as restCreateDate,t.type as restType,t.restCountMinute,
			b.`name` as carName,b.code ,c.surname,c.name as name
			from
			(
			select company_id,car_id ,create_date,type,driver_id,TIMESTAMPDIFF(MINUTE,create_date,#{currentDate,jdbcType=TIMESTAMP}) as restCountMinute 
			from t_car_drive_rest a 
			where company_id = #{companyId,jdbcType=VARCHAR} and not exists
			(
				select 1 from t_car_drive_rest where company_id = a.company_id and car_id = a.car_id and a.create_date &lt; create_date
			)
			)t 
			left join t_car b on t.car_id = b.id
			left join t_user c on t.driver_id = c.id
	</select>
	
	
	<!--车主-我的运单-列表-->
	<select id="queryTransporterWaybillList" resultType="java.util.Map">
		select a.id as carId,a.`code`,ifnull(b.count,0) as waybillCount,ifnull(c.count,0) as forLoadingCount
		from t_car a 
		left join (
			select count(1) as count,car_id from t_waybill where transporter_company_id = #{companyId,jdbcType=VARCHAR} group by car_id
		) b on a.id = b.car_id 
		left join(
			select car_id ,count(1) as count from t_waybill where transporter_company_id = #{companyId,jdbcType=VARCHAR} and status = 0 and dispense_status = 0 group by car_id
		) c on a.id = c.car_id 
		where a.company_id = #{companyId,jdbcType=VARCHAR}
	</select>
	<!-- 预留根据车辆id查询运单相关详情信息 -->
	
	<!-- 车主-每日一检 -列表-->
	<select id="queryTransporterCarDailyInspectionList" resultType="java.util.Map">
		select 
			a.id as carId,a.`name` as carName,a.code ,c.surname,c.name as name,
     		ifnull(b.count,0) as dailyInspenctionCount,b.faultCount
		from t_car a
		left join t_user c on a.driver_id = c.id
		left join (
			select car_id,count(1) as count,
				(engine_oil_count+air_pressure_coolant_count+tire_count+indicator_light_count+safety_equipment_count) as faultCount
			from t_car_daily_inspection 
			where inspection_date = #{currentDate,jdbcType=DATE} group by car_id 
		)b on b.car_id = a.id
		where a.company_id =#{companyId,jdbcType=VARCHAR} 
	</select>
	<!-- 每日一检-详情 -->
	<select id="queryCarDailyInspection" resultType="java.util.Map">
		select 
		a.inspection_date as inspenctionDate ,
    	a.engine_oil_id as engioneOilId,
    	a.engine_oil_count as engineOilCount,
    	a.air_pressure_coolant_id as airPressureCoolantId,
    	a.air_pressure_coolant_count as airPressureCoolantCount, 
    	a.tire_id as tireId, 
    	a.tire_count as tireCount, 
    	a.indicator_light_id as indicatorLightId, 
    	a.indicator_light_count as indicatorLightCount, 
    	a.safety_equipment_id as safetyEquipmentId,
    	a.safety_equipment_count as safetyEquipmentCount
    	from t_car_daily_inspection a
		where a.car_id = #{carId,jdbcType=VARCHAR} and a.inspection_date = #{currentDate,jdbcType=DATE}
	</select>
	
	<!-- 司机-首页-运单 -->
	<select id="queryIndexDriverWaybill" resultType ="java.util.Map">
		select 
		ifnull(b.count,0) as waybillCount,
		count(1) as forLoadingCount
		from t_waybill a
		left join  
			(select driver_id,count(1) as count from t_waybill where status =0 and dispense_status = 1 and driver_id =#{driverId,jdbcType=VARCHAR} ) b 
		on b.driver_id = a.driver_id
		where
		a.transporter_company_id=#{companyId,jdbcType=VARCHAR}  
		and a.driver_id = #{driverId,jdbcType=VARCHAR} 
	</select>
	<!-- 司机-首页-每日一检 -->
	<select id="queryIndexDriverCarDailyInspection" resultType ="java.util.Map">	
		select count(1) as dailyInspectionCount
		from t_car_daily_inspection 
		where company_id = #{companyId,jdbcType=VARCHAR}  
		and driver_id  = #{driverId,jdbcType=VARCHAR} 
		and inspection_date = #{currentDate,jdbcType=DATE}
	</select>
	<!-- 司机-首页-行车休息 -->
	<select id="queryIndexDriverCarDriveRest" resultType ="java.util.Map">
		select type as restType,create_date as restCreateDate,TIMESTAMPDIFF(MINUTE,create_date,#{currentDate,jdbcType=TIMESTAMP}) as restCountMinute
			from t_car_drive_rest 
		where company_id = #{companyId,jdbcType=VARCHAR}
			and driver_id = #{driverId,jdbcType=VARCHAR} 
			order by create_date desc limit 1 
	</select>
	<!-- 司机-首页-保险,路税,车检提醒 -->
	<select id="queryIndexDriverCarNotice" resultType="java.util.Map">
		 select id as carId,code,
		 	date_format(insurance_end_date,'%Y-%m-%d') as insuranceEndDate,
 		 	datediff(insurance_end_date,#{currentDate,jdbcType=DATE})  insuranceFailureCount,
 		    date_format(tax_end_date,'%Y-%m-%d') as taxEndDate,
 		 	datediff(tax_end_date,#{currentDate,jdbcType=DATE})  taxFailureCount,
 		 	date_format(check_end_date,'%Y-%m-%d') as checkEndDate,
 		 	datediff(check_end_date,#{currentDate,jdbcType=DATE})  checkFailureCount
		from t_car
		where company_id =#{companyId,jdbcType=VARCHAR}
		<if test="driverId != null and driverId != ''">
			and driver_id = #{driverId,jdbcType=VARCHAR} 
		</if>
	</select>
	<!-- 司机-运单统计-保留 -->
	
	<!-- 行车休息-详情 -->
	<select id="queryCarDriveRestDetail" resultType ="java.util.Map">
		select create_date as createDate,type from t_car_drive_rest 
		where car_id =  #{carId,jdbcType=VARCHAR}
		order by create_date 
	</select>
	<!-- 保险提醒 -列表-->
	<select id="queryCarInsuranceList" resultType ="java.util.Map">
	    select id,code,date_format(insurance_end_date,'%Y-%m-%d') as endDate,
 		 	datediff(insurance_end_date,#{currentDate,jdbcType=DATE})  failureCount
		from t_car
		where company_id =#{companyId,jdbcType=VARCHAR}
	</select>
	<!-- 保险提醒 -详情-->
	<select id="queryCarInsuranceDetail" resultType ="java.util.Map">
	    select a.id,
	    	date_format(a.insurance_start_date,'%Y.%m.%d') as startDate,
	    	date_format(a.insurance_end_date,'%Y.%m.%d') as endDate,
	    	concat('${@com.iflytransporter.api.conf.ConstantsConfig@getLinkPath()}',t.attachment_link)  as attachmentIdLink 
		from t_car a
		left join t_attachment t on a.attachment_id_3 = t.id
		where a.id =#{carId,jdbcType=VARCHAR}
	</select>
	
	<!-- 路税提醒 -列表-->
	<select id="queryCarTaxList" resultType ="java.util.Map">
	    select id,code,date_format(tax_end_date,'%Y-%m-%d') as endDate,
 		 	datediff(tax_end_date,#{currentDate,jdbcType=DATE})  failureCount
		from t_car
		where company_id =#{companyId,jdbcType=VARCHAR}
	</select>
	<!-- 路税提醒 -详情-->
	<select id="queryCarTaxDetail" resultType ="java.util.Map">
	    select a.id,
	    	date_format(a.tax_start_date,'%Y.%m.%d')  as startDate,
	    	date_format(a.tax_end_date,'%Y.%m.%d')  as endDate,
	    	concat('${@com.iflytransporter.api.conf.ConstantsConfig@getLinkPath()}',t.attachment_link)  as attachmentIdLink 
		from t_car a
		left join t_attachment t on a.attachment_id_4 = t.id
		where a.id =#{carId,jdbcType=VARCHAR}
	</select>
	
	<!-- 车检提醒 -列表-->
	<select id="queryCarCheckList" resultType ="java.util.Map">
	    select id,code,date_format(check_end_date,'%Y-%m-%d') as endDate,
 		 	datediff(check_end_date,#{currentDate,jdbcType=DATE})  failureCount
		from t_car
		where company_id =#{companyId,jdbcType=VARCHAR}
	</select>
	<!-- 车检提醒 -详情-->
	<select id="queryCarCheckDetail" resultType ="java.util.Map">
	    select a.id,
		    date_format(a.check_start_date,'%Y.%m.%d') as startDate,
		    date_format(a.check_end_date,'%Y.%m.%d') as endDate,
		    concat('${@com.iflytransporter.api.conf.ConstantsConfig@getLinkPath()}',t.attachment_link)  as attachmentIdLink 
		from t_car a
		left join t_attachment t on a.attachment_id_5 = t.id
		where a.id =#{carId,jdbcType=VARCHAR}
	</select>
	
  <insert id="insertCarAirPressureCoolant" parameterType="com.iflytransporter.common.bean.CarAirPressureCoolant" >
  insert into t_car_air_pressure_coolant (id,  update_date, 
      company_id, 
      driver_id, car_id, air_pressure, 
      coolant, air_tank_release_moisture, remark
      )
    values (#{id,jdbcType=VARCHAR}, now(), 
       #{companyId,jdbcType=VARCHAR}, 
      #{driverId,jdbcType=VARCHAR}, #{carId,jdbcType=VARCHAR}, #{airPressure,jdbcType=INTEGER}, 
      #{coolant,jdbcType=INTEGER}, #{airTankReleaseMoisture,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <select id="selectCarAirPressureCoolant" resultType="java.util.Map" parameterType="java.lang.String">
  	select  
  	air_pressure airPressure, 
    coolant, air_tank_release_moisture as airTankReleaseMoisture,remark
  	from t_car_air_pressure_coolant
  	where id =#{id,jdbcType=VARCHAR}
  </select>
  
   <insert id="insertCarEngineOil" parameterType="com.iflytransporter.common.bean.CarEngineOil" >
     insert into t_car_engine_oil (id, update_date, 
       company_id, 
      driver_id, car_id, engine_oil, 
      gear_oil, brake_fluid, remark
      )
    values (#{id,jdbcType=VARCHAR}, now(),
     #{companyId,jdbcType=VARCHAR}, 
      #{driverId,jdbcType=VARCHAR}, #{carId,jdbcType=VARCHAR}, #{engineOil,jdbcType=INTEGER}, 
      #{gearOil,jdbcType=INTEGER}, #{brakeFluid,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
   <select id="selectCarEngineOil" resultType="java.util.Map" parameterType="java.lang.String">
  	select  
  	engine_oil engineOil, 
    gear_oil gearOil, 
    brake_fluid brakeFluid,
     remark
  	 from t_car_engine_oil
  	where id =#{id,jdbcType=VARCHAR}
  </select>
  
  
  <insert id="insertCarSafetyEquipment" parameterType="com.iflytransporter.common.bean.CarSafetyEquipment" >
    insert into t_car_safety_equipment (id, update_date, 
    company_id, 
      driver_id, car_id, safety_helmet, 
      safety_shoes, safety_goggle, safety_glove, 
      seat_belt_condition, cabin_jack, first_aid_kit, 
      safety_cone, fire_extinguisher, torch_light, 
      light_reflect_sticker, speed_limit_sticker, 
      number_plate, remark)
    values (#{id,jdbcType=VARCHAR}, now(),
       #{companyId,jdbcType=VARCHAR}, 
      #{driverId,jdbcType=VARCHAR}, #{carId,jdbcType=VARCHAR}, #{safetyHelmet,jdbcType=INTEGER}, 
      #{safetyShoes,jdbcType=INTEGER}, #{safetyGoggle,jdbcType=INTEGER}, #{safetyGlove,jdbcType=INTEGER}, 
      #{seatBeltCondition,jdbcType=INTEGER}, #{cabinJack,jdbcType=INTEGER}, #{firstAidKit,jdbcType=INTEGER}, 
      #{safetyCone,jdbcType=INTEGER}, #{fireExtinguisher,jdbcType=INTEGER}, #{torchLight,jdbcType=INTEGER}, 
      #{lightReflectSticker,jdbcType=INTEGER}, #{speedLimitSticker,jdbcType=INTEGER}, 
      #{numberPlate,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  
   <select id="selectCarSafetyEquipment" resultType="java.util.Map" parameterType="java.lang.String">
  	select  
  	 safety_helmet safetyHelmet, 
    safety_shoes safetyShoes, 
    safety_goggle safetyGoggle,
     safety_glove safetyGlove, 
     seat_belt_condition seatBeltCondition,
      cabin_jack cabinJack, 
      first_aid_kit firstAidKit, 
    safety_cone safetyCone,
     fire_extinguisher fireExtinguisher,
      torch_light torchLight, 
      light_reflect_sticker lightReflectSticker,
       speed_limit_sticker speedLimitSticker, 
     number_plate numberPlate,
      remark
  	 from t_car_safety_equipment
  	where id =#{id,jdbcType=VARCHAR}
  </select>
  
  <insert id="insertCarIndicatorLight" parameterType="com.iflytransporter.common.bean.CarIndicatorLight" >
       insert into t_car_indicator_light (id, update_date, 
      company_id, 
      driver_id, car_id, signal_lamp, 
      head_lamp, side_mirror, temperature_meter, 
      double_signal, tachometer, odometer, 
      fuel_meter, beacon_lamp_function, horn, 
      wiper_condition, hand_brake, steering, 
      remark)
    values (#{id,jdbcType=VARCHAR},  now(),
      #{companyId,jdbcType=VARCHAR}, 
      #{driverId,jdbcType=VARCHAR}, #{carId,jdbcType=VARCHAR}, #{signalLamp,jdbcType=INTEGER}, 
      #{headLamp,jdbcType=INTEGER}, #{sideMirror,jdbcType=INTEGER}, #{temperatureMeter,jdbcType=VARCHAR}, 
      #{doubleSignal,jdbcType=INTEGER}, #{tachometer,jdbcType=INTEGER}, #{odometer,jdbcType=INTEGER}, 
      #{fuelMeter,jdbcType=INTEGER}, #{beaconLampFunction,jdbcType=INTEGER}, #{horn,jdbcType=INTEGER}, 
      #{wiperCondition,jdbcType=INTEGER}, #{handBrake,jdbcType=INTEGER}, #{steering,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
   <select id="selectCarIndicatorLight" resultType = "java.util.Map" parameterType="java.lang.String">
  	select  
  	   signal_lamp as signalLamp, 
       head_lamp as headLamp, 
       side_mirror sideMirror,
        temperature_meter temperatureMeter,
        double_signal doubleSignal, 
        tachometer, 
        odometer, 
        fuel_meter fuelMeter, 
        beacon_lamp_function beaconLampFunction, 
        horn, wiper_condition wiperCondition,
         hand_brake handBrake, steering, remark
  	 from t_car_indicator_light
  	where id =#{id,jdbcType=VARCHAR}
  </select>
  
   <insert id="insertCarTire" parameterType="com.iflytransporter.common.bean.CarTire" >
    insert into t_car_tire (id, update_date, 
     company_id, 
      driver_id, car_id, all_tire_pressure_enough, 
      tire_thread_condition, nut_wheel_hub_no_defect, 
      spare_tire_lock_strengthen, remark)
    values (#{id,jdbcType=VARCHAR}, now(), 
       #{companyId,jdbcType=VARCHAR}, 
      #{driverId,jdbcType=VARCHAR}, #{carId,jdbcType=VARCHAR}, #{allTirePressureEnough,jdbcType=INTEGER}, 
      #{tireThreadCondition,jdbcType=INTEGER}, #{nutWheelHubNoDefect,jdbcType=INTEGER}, 
      #{spareTireLockStrengthen,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
   
   <select id="selectCarTire" resultType = "java.util.Map" parameterType="java.lang.String">
  	select  
  	  all_tire_pressure_enough allTirePressureEnough, 
    tire_thread_condition tireThreadCondition,
     nut_wheel_hub_no_defect nutWheelHubNoDefect, 
     spare_tire_lock_strengthen spareTireLockStrengthen,  
      remark
  	 from t_car_tire
  	where id =#{id,jdbcType=VARCHAR}
  </select>
   
    <insert id="insertCarDailyInspection" parameterType="com.iflytransporter.common.bean.CarDailyInspection" >
     insert into t_car_daily_inspection (id,  update_date, 
     company_id, 
      driver_id, car_id, inspection_date, 
      engine_oil_id, engine_oil_count, air_pressure_coolant_id, 
      air_pressure_coolant_count, tire_id, tire_count, 
      indicator_light_id, indicator_light_count, 
      safety_equipment_id, safety_equipment_count
      )
    values (#{id,jdbcType=VARCHAR},now(),
      #{companyId,jdbcType=VARCHAR}, 
      #{driverId,jdbcType=VARCHAR}, #{carId,jdbcType=VARCHAR}, now(), 
      #{engineOilId,jdbcType=VARCHAR}, #{engineOilCount,jdbcType=INTEGER}, #{airPressureCoolantId,jdbcType=VARCHAR}, 
      #{airPressureCoolantCount,jdbcType=INTEGER}, #{tireId,jdbcType=VARCHAR}, #{tireCount,jdbcType=INTEGER}, 
      #{indicatorLightId,jdbcType=VARCHAR}, #{indicatorLightCount,jdbcType=INTEGER}, 
      #{safetyEquipmentId,jdbcType=VARCHAR}, #{safetyEquipmentCount,jdbcType=INTEGER}
      )
  </insert>
  
   <insert id="insertCarDriveRest" parameterType="com.iflytransporter.common.bean.CarDriveRest" >
    insert into t_car_drive_rest (id, update_date, desp, company_id, 
      driver_id, car_id, type)
    values (#{id,jdbcType=VARCHAR}, now(),
       #{desp,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, 
      #{driverId,jdbcType=VARCHAR}, #{carId,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}
      )
  </insert>
  <delete id="deleteCarDriveRest">
  	delete from t_car_drive_rest where car_id = #{carId,jdbcType=VARCHAR}
  </delete>
  
  <!-- 车辆维修 -->
   <select id="queryCarMaintenanceList" resultType="java.util.Map" parameterType="com.iflytransporter.api.bean.carmanage.CarMaintenanceReq">
  	select 
	  	id, country_code as countryCode, country_name as countryName, 
	  	province_id as provinceId, province, 
	    city_id as cityId, city,
	    area_id as areaId, area,
	    company_name as companyName, 
	    business,  business_hours businessHours, 
	    contacts,  mobile, email, address
	from t_car_maintenance
	where 1= 1 
     <if test="countryCode != null" >
       and country_code = #{countryCode,jdbcType=VARCHAR}
     </if>
     <if test="provinceId != null" >
      and province_id = #{provinceId,jdbcType=VARCHAR}
     </if>
     <if test="cityId != null" >
      and city_id = #{cityId,jdbcType=VARCHAR}
     </if>
     <if test="areaId != null" >
      and area_id = #{areaId,jdbcType=VARCHAR}
     </if>
  </select>
  
</mapper>