<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iflytransporter.api.mapper.TransporterWaybillMapper" >
  <resultMap id="BaseResultMap" type="com.iflytransporter.common.bean.Waybill" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="data_status" property="dataStatus" jdbcType="SMALLINT" />
    <result column="desp" property="desp" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="shipper_id" property="shipperId" jdbcType="VARCHAR" />
    <result column="transporter_id" property="transporterId" jdbcType="VARCHAR" />
    <result column="dispense_status" property="dispenseStatus" jdbcType="INTEGER" />
    <result column="driver_id" property="driverId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="costs" property="costs" jdbcType="DOUBLE" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
     <result column="shipper_company_id" property="shipperCompanyId" jdbcType="VARCHAR" />
    <result column="transporter_company_id" property="transporterCompanyId" jdbcType="VARCHAR" />
    
    <result column="take_attachment_id_1" property="takeAttachmentId1" jdbcType="VARCHAR" />
    <result column="take_attachment_id_2" property="takeAttachmentId2" jdbcType="VARCHAR" />
    <result column="take_attachment_id_3" property="takeAttachmentId3" jdbcType="VARCHAR" />
    <result column="take_attachment_id_4" property="takeAttachmentId4" jdbcType="VARCHAR" />
    <result column="deliver_attachment_id_1" property="deliverAttachmentId1" jdbcType="VARCHAR" />
    <result column="deliver_attachment_id_2" property="deliverAttachmentId2" jdbcType="VARCHAR" />
    <result column="deliver_attachment_id_3" property="deliverAttachmentId3" jdbcType="VARCHAR" />
    <result column="deliver_attachment_id_4" property="deliverAttachmentId4" jdbcType="VARCHAR" />
    <result column="take_date" property="takeDate" jdbcType="TIMESTAMP" />
    <result column="deliver_date" property="deliverDate" jdbcType="TIMESTAMP" />
    <result column="confirm_date" property="confirmDate" jdbcType="TIMESTAMP" />
  </resultMap>
  
   <sql id="Base_Column_List" >
   id, create_date, update_date, data_status, desp, order_id, shipper_id, transporter_id, 
    dispense_status, driver_id, status, costs, order_no, transporter_company_id, 
    shipper_company_id, take_attachment_id_1, take_attachment_id_2, take_attachment_id_3, 
    take_attachment_id_4, take_date, deliver_attachment_id_1, deliver_attachment_id_2, 
    deliver_attachment_id_3, deliver_attachment_id_4, deliver_date, confirm_date
  </sql>
  
  <select id="takeAttachmentList" resultType="java.util.Map" parameterType="java.lang.String">
   select a.take_date as takeDate,
   concat('${@com.iflytransporter.api.conf.ConstantsConfig@getLinkPath()}',b.attachment_link) as takeAttachmentId1Link,
   concat('${@com.iflytransporter.api.conf.ConstantsConfig@getLinkPath()}',c.attachment_link) as takeAttachmentId2Link,
   concat('${@com.iflytransporter.api.conf.ConstantsConfig@getLinkPath()}',d.attachment_link) as takeAttachmentId3Link,
   concat('${@com.iflytransporter.api.conf.ConstantsConfig@getLinkPath()}',e.attachment_link) as takeAttachmentId4Link
	from t_waybill a 
	LEFT JOIN t_attachment b on a.take_attachment_id_1 = b.id
	LEFT JOIN t_attachment c on a.take_attachment_id_2 = c.id
	LEFT JOIN t_attachment d on a.take_attachment_id_3 = d.id
	LEFT JOIN t_attachment e on a.take_attachment_id_4 = e.id
    where a.id =  #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="deliverAttachmentList" resultType="java.util.Map" parameterType="java.lang.String">
   select a.deliver_date as deliverDate,
   concat('${@com.iflytransporter.api.conf.ConstantsConfig@getLinkPath()}',b.attachment_link) as deliverAttachmentId1Link,
   concat('${@com.iflytransporter.api.conf.ConstantsConfig@getLinkPath()}',c.attachment_link) as deliverAttachmentId2Link,
   concat('${@com.iflytransporter.api.conf.ConstantsConfig@getLinkPath()}',d.attachment_link) as deliverAttachmentId3Link,
   concat('${@com.iflytransporter.api.conf.ConstantsConfig@getLinkPath()}',e.attachment_link) as deliverAttachmentId4Link
	from t_waybill a 
	LEFT JOIN t_attachment b on a.deliver_attachment_id_1 = b.id
	LEFT JOIN t_attachment c on a.deliver_attachment_id_2 = c.id
	LEFT JOIN t_attachment d on a.deliver_attachment_id_3 = d.id
	LEFT JOIN t_attachment e on a.deliver_attachment_id_4 = e.id
	where a.id =  #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="queryAll" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from t_waybill
    where 1 = 1 
     <if test="shipperId != null" >
      and shipper_id  = #{shipperId,jdbcType=VARCHAR}
    </if>
     <if test="transporterId != null" >
      and driver_id  = #{transporterId,jdbcType=VARCHAR}
    </if>
    <if test="shipperCompanyId != null" >
      and shipper_company_id  = #{shipperCompanyId,jdbcType=VARCHAR}
    </if>
     <if test="transporterCompanyId != null" >
      and transporter_company_id  = #{transporterCompanyId,jdbcType=VARCHAR}
    </if>
     <!-- 0-待装车(待派单-管理员),1-运输中,2-已完结(对应货主端2待确认,3已完结) -->
    <!-- 查询status不等于2,查询对应status状态 -->
     <if test="status != null and status != 2" >
      and status  = #{status,jdbcType=INTEGER}
    </if>
    <!-- 查询status不等于2,查询对应status=2 or status = 3状态 -->
     <if test="status != null and status == 2" >
      and (status =2 or status =3)  
    </if>
     <if test="dispenseStatus != null" >
      and dispense_status  = #{dispenseStatus,jdbcType=INTEGER}
    </if>
     <if test="lastCreateDate != null and than != null and than =='lt' " >
      and create_date  &lt; #{lastCreateDate,jdbcType=TIMESTAMP}
    </if>
     <if test="lastCreateDate != null and than != null and than =='gt' " >
      and create_date  &gt; #{lastCreateDate,jdbcType=TIMESTAMP}
    </if>
     <if test="lastCreateDate != null and than == null " >
      and create_date  &gt; #{lastCreateDate,jdbcType=TIMESTAMP}
    </if>
    order by create_date  desc
  </select>
  <!-- 发货人 -->
  <select id="detailShipper" resultType="java.util.Map">
   select a.id ,a.mobile ,a.surname,a.name ,a.create_date as registerDate ,b.count
   from t_user a 
   left join (select shipper_id ,count(1) as count from t_waybill GROUP BY shipper_id) b on a.id = b.shipper_id
   where a.id = #{shipperId,jdbcType=VARCHAR} 
  </select>
  <!-- 货主公司 -->
  <select id="detailShipperCompany" resultType="java.util.Map">
  	select a.`name` as companyName,a.create_date as registerDate,round(ifnull(b.grade,5)) as grade ,c.count as count,d.id as shipperId,d.surname,d.name,d.mobile
	from t_company a
  left join (select shipper_company_id, AVG(IFNULL(serve_grade,0)+IFNULL(loading_grade,0)+IFNULL(goods_grade,0))/3 as grade from t_transporter_comment GROUP BY shipper_company_id) b on a.id= b.shipper_company_id
  left join (select shipper_company_id ,count(1) as count from t_waybill GROUP BY shipper_company_id) c on a.id = c.shipper_company_id
  left join t_user d on a.id = d.company_id 
 	where a.id = #{companyId,jdbcType=VARCHAR} and d.user_type = 0 and d.level = 1
  </select>
  <!-- 货主详情 -->
   <select id="detailShipperComment" resultType="java.util.Map">
  	select a.mobile,a.create_date as registerDate,a.surname ,a.name ,d.`name` as companyName,c.count as count,
  	round(ifnull(b.grade,5)) as grade,round(ifnull(b.serveGrade,5)) as serveGrade,round(ifnull(b.loadingGrade,5)) as loadingGrade, round(ifnull(b.goodsGrade,5)) as goodsGrade,b.commentCount
		from t_user a 
		left join 
			(select shipper_id,count(1) as commentCount ,
			AVG(IFNULL(serve_grade,0))as serveGrade,AVG(IFNULL(loading_grade,0))as loadingGrade,AVG(IFNULL(goods_grade,0)) as goodsGrade,
			AVG(IFNULL(serve_grade,0)+IFNULL(loading_grade,0)+IFNULL(goods_grade,0))/3 as grade
		 	from t_transporter_comment GROUP BY shipper_id)
		 b on a.id = b.shipper_id
		 left join (select shipper_id ,count(1) as count from t_waybill GROUP BY shipper_id) c on a.id = c.shipper_id
		 left join t_company d on d.id = a.company_id
 	where a.id = #{shipperId,jdbcType=VARCHAR} 
  </select>
  
  <update id="updateStatus">
  	update t_waybill set  status  = #{status,jdbcType=INTEGER},confirm_date =now() where id =#{id,jdbcType=VARCHAR}
  </update>
  
  
  <select id="listDriver" resultType="java.util.Map">
  	select a.id as driverId,a.surname,a.name,a.mobile,b.id as carId,b.name as carName,b.code as carCode 
  	 from t_user a 
  	 left join t_car b on a.id = b.driver_id
  	 where a.company_id = #{companyId,jdbcType=VARCHAR} 
  	 and a.auth_status = 2
    <if test="level != null" >
    and  a.level = #{level,jdbcType=INTEGER}
    </if>
  </select>
  
  <select id="listCar" resultType="java.util.Map">
  	select id,name,code from t_car where company_id = #{companyId,jdbcType=VARCHAR} 
  </select>
 	<!-- 派单 --> 
	 <update id="dispense">
	 	update t_waybill set 
	 	dispense_status = #{dispenseStatus,jdbcType=INTEGER}, 
	 	dispense_date = now(),
	 	driver_id = #{driverId,jdbcType=VARCHAR},
	 	car_id = #{carId,jdbcType=VARCHAR}
	 	where id = #{id,jdbcType=VARCHAR}
	</update>
	<!-- 司机信息 -->
	<select id="detailDriver" resultType="java.util.Map">
	   select id ,mobile ,surname,name 
	   from t_user 
	   where id = #{driverId,jdbcType=VARCHAR} 
	</select>
	<!-- 派单司机以及车辆信息 -->
	<select id="detailDispense" resultType="java.util.Map">
	select b.id as driverId,b.surname as surname,b.`name` as name,b.mobile as mobile,c.`name` as carName,c.`code` as carCode,round(ifnull(d.grade,5)) as grade
	from t_waybill a
	left join t_user b on a.driver_id = b.id
	left join t_car c on a.car_id  = c.id
	left join (select transporter_id ,AVG(IFNULL(serve_grade,0)+IFNULL(loading_grade,0)+IFNULL(goods_grade,0))/3 as grade from t_comment GROUP BY transporter_id) d on a.driver_id= d.transporter_id
 	where a.id = #{id,jdbcType=VARCHAR}
	</select>
	<!-- 车辆详情 (司机评价)-->
  <select id="detailDispenseComment" resultType="java.util.Map">
  	select a.create_date as registerDate,a.surname,a.name,a.mobile,c.count as count,
  	round(ifnull(b.grade,5)) as grade,round(ifnull(b.serveGrade,5)) as serveGrade,round(ifnull(b.loadingGrade,5)) as loadingGrade, round(ifnull(b.goodsGrade,5)) as goodsGrade,b.commentCount
		from t_user a 
		 left join 
			(select driver_id,count(1) as commentCount ,
			AVG(IFNULL(serve_grade,0))as serveGrade,AVG(IFNULL(loading_grade,0))as loadingGrade,AVG(IFNULL(goods_grade,0)) as goodsGrade,
			AVG(IFNULL(serve_grade,0)+IFNULL(loading_grade,0)+IFNULL(goods_grade,0))/3 as grade
		 	from t_comment GROUP BY driver_id) b 
		 on a.id = b.driver_id
		 left join (select driver_id ,count(1) as count from t_waybill GROUP BY driver_id) c on a.id = c.driver_id
 	where a.id = #{driverId,jdbcType=VARCHAR} 
  </select>
  <update id="loadingProof">
   update t_waybill 
    <set>
     <if test="takeAttachmentId1 != null" >
        take_attachment_id_1 = #{takeAttachmentId1,jdbcType=VARCHAR},
      </if>
       <if test="takeAttachmentId2 != null" >
        take_attachment_id_2 = #{takeAttachmentId2,jdbcType=VARCHAR},
      </if>
       <if test="takeAttachmentId3 != null" >
        take_attachment_id_3 = #{takeAttachmentId3,jdbcType=VARCHAR},
      </if>
       <if test="takeAttachmentId4 != null" >
        take_attachment_id_4 = #{takeAttachmentId4,jdbcType=VARCHAR},
      </if>
       take_date = now(),status = #{status,jdbcType=INTEGER} 
   </set>
   where id = #{id,jdbcType=VARCHAR} 
  </update>
  
  <update id="deliverProof">
   update t_waybill 
    <set>
     <if test="deliverAttachmentId1 != null" >
        deliver_attachment_id_1 = #{deliverAttachmentId1,jdbcType=VARCHAR},
      </if>
       <if test="deliverAttachmentId2 != null" >
        deliver_attachment_id_2 = #{deliverAttachmentId2,jdbcType=VARCHAR},
      </if>
       <if test="deliverAttachmentId3 != null" >
        deliver_attachment_id_3 = #{deliverAttachmentId3,jdbcType=VARCHAR},
      </if>
       <if test="deliverAttachmentId4 != null" >
        deliver_attachment_id_4 = #{deliverAttachmentId4,jdbcType=VARCHAR},
      </if>
       deliver_date = now(),status = #{status,jdbcType=INTEGER} 
   </set>
   where id = #{id,jdbcType=VARCHAR} 
  </update>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_waybill
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_waybill
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.iflytransporter.common.bean.Waybill" >
    insert into t_waybill (id, update_date, 
       desp, order_id, 
      shipper_id, transporter_id, dispense_status, 
      driver_id, costs, 
      order_no, shipper_company_id, transporter_company_id
      )
    values (#{id,jdbcType=VARCHAR}, now(), 
      #{desp,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, 
      #{shipperId,jdbcType=VARCHAR}, #{transporterId,jdbcType=VARCHAR}, #{dispenseStatus,jdbcType=INTEGER}, 
      #{driverId,jdbcType=VARCHAR},  #{costs,jdbcType=DOUBLE}, 
      #{orderNo,jdbcType=VARCHAR}, #{shipperCompanyId,jdbcType=VARCHAR}, #{transporterCompanyId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.iflytransporter.common.bean.Waybill" >
    insert into t_waybill
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="dataStatus != null" >
        data_status,
      </if>
      <if test="desp != null" >
        desp,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="shipperId != null" >
        shipper_id,
      </if>
      <if test="transporterId != null" >
        transporter_id,
      </if>
      <if test="dispenseStatus != null" >
        dispense_status,
      </if>
      <if test="driverId != null" >
        driver_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="costs != null" >
        costs,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="shipperCompanyId != null" >
        shipper_company_id,
      </if>
      <if test="transporterCompanyId != null" >
        transporter_company_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="dataStatus != null" >
        #{dataStatus,jdbcType=SMALLINT},
      </if>
      <if test="desp != null" >
        #{desp,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="shipperId != null" >
        #{shipperId,jdbcType=VARCHAR},
      </if>
      <if test="transporterId != null" >
        #{transporterId,jdbcType=VARCHAR},
      </if>
      <if test="dispenseStatus != null" >
        #{dispenseStatus,jdbcType=INTEGER},
      </if>
      <if test="driverId != null" >
        #{driverId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="costs != null" >
        #{costs,jdbcType=DOUBLE},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="shipperCompanyId != null" >
        #{shipperCompanyId,jdbcType=VARCHAR},
      </if>
      <if test="transporterCompanyId != null" >
        #{transporterCompanyId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.iflytransporter.common.bean.Waybill" >
    update t_waybill
    <set >
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="dataStatus != null" >
        data_status = #{dataStatus,jdbcType=SMALLINT},
      </if>
      <if test="desp != null" >
        desp = #{desp,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="shipperId != null" >
        shipper_id = #{shipperId,jdbcType=VARCHAR},
      </if>
      <if test="transporterId != null" >
        transporter_id = #{transporterId,jdbcType=VARCHAR},
      </if>
      <if test="dispenseStatus != null" >
        dispense_status = #{dispenseStatus,jdbcType=INTEGER},
      </if>
      <if test="driverId != null" >
        driver_id = #{driverId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="costs != null" >
        costs = #{costs,jdbcType=DOUBLE},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="shipperCompanyId != null" >
        shipper_company_id = #{shipperCompanyId,jdbcType=VARCHAR},
      </if>
      <if test="transporterCompanyId != null" >
        transporter_company_id = #{transporterCompanyId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iflytransporter.common.bean.Waybill" >
    update t_waybill
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      data_status = #{dataStatus,jdbcType=SMALLINT},
      desp = #{desp,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      shipper_id = #{shipperId,jdbcType=VARCHAR},
      transporter_id = #{transporterId,jdbcType=VARCHAR},
      dispense_status = #{dispenseStatus,jdbcType=INTEGER},
      driver_id = #{driverId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      costs = #{costs,jdbcType=DOUBLE},
      order_no = #{orderNo,jdbcType=VARCHAR},
      shipper_company_id = #{shipperCompanyId,jdbcType=VARCHAR},
      transporter_company_id = #{transporterCompanyId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>